{"version":3,"sources":["components/cards/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","data","id","alt","name","email","CardList","console","log","map","item","Search","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredData","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BAAiEC,IAAI,KAC7E,6BAAKL,EAAMG,KAAKG,OAChB,4BAAIN,EAAMG,KAAKI,YCHNC,G,MAAW,SAACR,GAGvB,OAFAS,QAAQC,IAAIV,GAGV,qBAAKC,UAAU,YAAf,SACGD,EAAMG,KAAKQ,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBT,KAAMS,GAAfA,EAAKR,WCNjCS,G,MAAS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACnC,OACE,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCkCjEG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAUFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QAAS,kBAAMd,QAAQC,IAAIS,EAAEG,OAAOC,WAT1E,EAAKC,MAAQ,CACXrB,KAAM,GACNkB,YAAa,IALH,E,qDAed,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvB,GAAI,OAAI,EAAKiB,SAAS,CAACjB,c,oBAGhC,WAAU,IAAD,EACsB0B,KAAKL,MAA3BrB,EADA,EACAA,KAAMkB,EADN,EACMA,YACRS,EAAe3B,EAAK4B,QAAO,SAAAnB,GAAI,OAAIA,EAAKN,KAAK0B,cAAcC,SAASZ,EAAYW,kBACtF,OACE,sBAAK/B,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAQa,YAAY,eAAeC,aAAcc,KAAKd,eACtD,cAAC,EAAD,CAAUZ,KAAM2B,W,GA7BNI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2d866245.chunk.js","sourcesContent":["import React from 'react'\nimport './card.style.css'\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img src={`https://robohash.org/${props.data.id}?set=set2&size=200x200`} alt=\"\"/>\n    <h3>{props.data.name}</h3>\n    <p>{props.data.email}</p>\n  </div>\n)","import React from 'react'\nimport { Card } from '../cards/card.component'\nimport './card-list.styles.css'\n\nexport const CardList = (props) => {\n  console.log(props)\n\n  return (\n    <div className=\"card-list\">         \n      {props.data.map(item => <Card key={item.id} data={item}/>)}\n    </div>\n  )\n  \n}","import React from 'react'\nimport './search.styles.css'\n\nexport const Search = ({placeholder, handleChange}) => {\n  return (\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\n  )\n}","import { Component } from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component'\nimport { Search } from './components/search/search.component';\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      searchField: ''\n    }\n\n    // this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value }, () => console.log(e.target.value))\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(data => this.setState({data}))\n  }\n\n   render() { \n    const { data, searchField } = this.state;\n    const filteredData = data.filter(item => item.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className='App'>\n        <h1>Monsters Inc.</h1>\n        <Search placeholder='Searching...' handleChange={this.handleChange}/>\n        <CardList data={filteredData}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}